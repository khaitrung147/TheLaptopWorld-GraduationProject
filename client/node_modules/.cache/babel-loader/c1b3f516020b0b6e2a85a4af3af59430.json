{"ast":null,"code":"import { call, put, delay, fork, all, takeEvery } from \"redux-saga/effects\";\nimport { getListRate, postRate } from \"../../api/rate\";\nimport { getListRateSuccess, postRateSuccess } from \"../actions/rate\";\n\nfunction* getListCommentIdSaga(action) {\n  try {\n    const data = yield call(getListRate, action.payload.id);\n    yield delay(-100);\n    yield put(getListCommentSuccess(data));\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* postCommentSaga(action) {\n  try {\n    const data = yield call(postComment, action.payload);\n\n    if (data.status === 200) {\n      yield put(postCommentSuccess(data));\n    }\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* todoGet() {\n  yield takeEvery(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\n}\n\nfunction* todoPost() {\n  yield takeEvery(\"POST_COMMENT\", postCommentSaga);\n}\n\nconst rootSaga = [fork(todoGet), fork(todoPost)];\nexport default function* commentSaga() {\n  yield all([...rootSaga]);\n}","map":{"version":3,"sources":["E:/fpoly/A-PROJECT2/New folder/TheLaptopWorld-GraduationProject/client/src/redux/reducers/rate.js"],"names":["call","put","delay","fork","all","takeEvery","getListRate","postRate","getListRateSuccess","postRateSuccess","getListCommentIdSaga","action","data","payload","id","getListCommentSuccess","error","console","log","postCommentSaga","postComment","status","postCommentSuccess","todoGet","todoPost","rootSaga","commentSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,iBAApD;;AAEA,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACM,WAAD,EAAcK,MAAM,CAACE,OAAP,CAAeC,EAA7B,CAAvB;AACA,UAAMZ,KAAK,CAAC,CAAC,GAAF,CAAX;AACA,UAAMD,GAAG,CAACc,qBAAqB,CAACH,IAAD,CAAtB,CAAT;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUG,eAAV,CAA0BR,MAA1B,EAAkC;AAChC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACoB,WAAD,EAAcT,MAAM,CAACE,OAArB,CAAvB;;AACA,QAAID,IAAI,CAACS,MAAL,KAAgB,GAApB,EAAyB;AACvB,YAAMpB,GAAG,CAACqB,kBAAkB,CAACV,IAAD,CAAnB,CAAT;AACD;AACF,GALD,CAKE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUO,OAAV,GAAoB;AAClB,QAAMlB,SAAS,CAAC,oBAAD,EAAuBK,oBAAvB,CAAf;AACD;;AAED,UAAUc,QAAV,GAAqB;AACnB,QAAMnB,SAAS,CAAC,cAAD,EAAiBc,eAAjB,CAAf;AACD;;AAED,MAAMM,QAAQ,GAAG,CAACtB,IAAI,CAACoB,OAAD,CAAL,EAAgBpB,IAAI,CAACqB,QAAD,CAApB,CAAjB;AAEA,eAAe,UAAUE,WAAV,GAAwB;AACrC,QAAMtB,GAAG,CAAC,CAAC,GAAGqB,QAAJ,CAAD,CAAT;AACD","sourcesContent":["import { call, put, delay, fork, all, takeEvery } from \"redux-saga/effects\";\r\nimport { getListRate, postRate } from \"../../api/rate\";\r\nimport { getListRateSuccess, postRateSuccess } from \"../actions/rate\";\r\n\r\nfunction* getListCommentIdSaga(action) {\r\n  try {\r\n    const data = yield call(getListRate, action.payload.id);\r\n    yield delay(-100);\r\n    yield put(getListCommentSuccess(data));\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* postCommentSaga(action) {\r\n  try {\r\n    const data = yield call(postComment, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(postCommentSuccess(data));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* todoGet() {\r\n  yield takeEvery(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\r\n}\r\n\r\nfunction* todoPost() {\r\n  yield takeEvery(\"POST_COMMENT\", postCommentSaga);\r\n}\r\n\r\nconst rootSaga = [fork(todoGet), fork(todoPost)];\r\n\r\nexport default function* commentSaga() {\r\n  yield all([...rootSaga]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}