{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getListComment, postComment } from \"../../api/comment\";\nimport { getListCommentSuccess } from \"../actions/comment\";\n\nfunction* getListCommentIdSaga(action) {\n  try {\n    const data = yield call(getListComment, action.payload.id);\n    yield put(getListCommentSuccess(data));\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* postCommentSaga(action) {\n  try {\n    const data = yield call(postComment);\n    yield put(getListCommentSuccess(data));\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* commentSaga() {\n  yield takeLatest(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\n  yield takeLatest(\"POST_COMMENT\", postCommentSaga);\n}\n\nexport default commentSaga;","map":{"version":3,"sources":["E:/fpoly/A-PROJECT2/New folder/TheLaptopWorld-GraduationProject/client/src/redux/sagas/comment.js"],"names":["call","put","takeLatest","getListComment","postComment","getListCommentSuccess","getListCommentIdSaga","action","data","payload","id","error","console","log","postCommentSaga","commentSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,mBAA5C;AACA,SAASC,qBAAT,QAAsC,oBAAtC;;AAEA,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACG,cAAD,EAAiBI,MAAM,CAACE,OAAP,CAAeC,EAAhC,CAAvB;AACA,UAAMT,GAAG,CAACI,qBAAqB,CAACG,IAAD,CAAtB,CAAT;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUG,eAAV,CAA0BP,MAA1B,EAAkC;AAChC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMR,IAAI,CAACI,WAAD,CAAvB;AACA,UAAMH,GAAG,CAACI,qBAAqB,CAACG,IAAD,CAAtB,CAAT;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUI,WAAV,GAAwB;AACtB,QAAMb,UAAU,CAAC,oBAAD,EAAuBI,oBAAvB,CAAhB;AACA,QAAMJ,UAAU,CAAC,cAAD,EAAiBY,eAAjB,CAAhB;AACD;;AAED,eAAeC,WAAf","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { getListComment, postComment } from \"../../api/comment\";\r\nimport { getListCommentSuccess } from \"../actions/comment\";\r\n\r\nfunction* getListCommentIdSaga(action) {\r\n  try {\r\n    const data = yield call(getListComment, action.payload.id);\r\n    yield put(getListCommentSuccess(data));\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* postCommentSaga(action) {\r\n  try {\r\n    const data = yield call(postComment);\r\n    yield put(getListCommentSuccess(data));\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* commentSaga() {\r\n  yield takeLatest(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\r\n  yield takeLatest(\"POST_COMMENT\", postCommentSaga);\r\n}\r\n\r\nexport default commentSaga;\r\n"]},"metadata":{},"sourceType":"module"}