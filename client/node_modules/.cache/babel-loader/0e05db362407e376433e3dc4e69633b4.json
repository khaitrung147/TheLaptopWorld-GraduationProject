{"ast":null,"code":"import { call, put, takeLatest, delay, fork, all, takeEvery } from \"redux-saga/effects\";\nimport { getListComment, postComment } from \"../../api/comment\";\nimport { getListCommentSuccess } from \"../actions/comment\";\n\nfunction* getListCommentIdSaga(action) {\n  try {\n    const data = yield call(getListComment, action.payload.id);\n    yield delay(200);\n    yield put(getListCommentSuccess(data));\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* postCommentSaga({\n  payload\n}) {\n  try {\n    const data = yield call(postComment, payload);\n    console.log(data);\n\n    if (data.status === 200) {\n      yield delay(500);\n      yield put(getListCommentSuccess(data));\n    }\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* todoGet() {\n  yield takeEvery(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\n}\n\nfunction* todoPost() {\n  yield takeEvery(\"POST_COMMENT\", postCommentSaga);\n}\n\nconst rootSaga = [fork(todoGet), fork(todoPost)];\nexport default function* commentSaga() {\n  yield all([...rootSaga]);\n}","map":{"version":3,"sources":["E:/fpoly/A-PROJECT2/New folder/TheLaptopWorld-GraduationProject/client/src/redux/sagas/comment.js"],"names":["call","put","takeLatest","delay","fork","all","takeEvery","getListComment","postComment","getListCommentSuccess","getListCommentIdSaga","action","data","payload","id","error","console","log","postCommentSaga","status","todoGet","todoPost","rootSaga","commentSaga"],"mappings":"AAAA,SACEA,IADF,EAEEC,GAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,GANF,EAOEC,SAPF,QAQO,oBARP;AASA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,mBAA5C;AACA,SAASC,qBAAT,QAAsC,oBAAtC;;AAEA,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACO,cAAD,EAAiBI,MAAM,CAACE,OAAP,CAAeC,EAAhC,CAAvB;AACA,UAAMX,KAAK,CAAC,GAAD,CAAX;AACA,UAAMF,GAAG,CAACQ,qBAAqB,CAACG,IAAD,CAAtB,CAAT;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUG,eAAV,CAA0B;AAAEL,EAAAA;AAAF,CAA1B,EAAuC;AACrC,MAAI;AACF,UAAMD,IAAI,GAAG,MAAMZ,IAAI,CAACQ,WAAD,EAAcK,OAAd,CAAvB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,QAAIA,IAAI,CAACO,MAAL,KAAgB,GAApB,EAAyB;AACvB,YAAMhB,KAAK,CAAC,GAAD,CAAX;AACA,YAAMF,GAAG,CAACQ,qBAAqB,CAACG,IAAD,CAAtB,CAAT;AACD;AACF,GARD,CAQE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUK,OAAV,GAAoB;AAClB,QAAMd,SAAS,CAAC,oBAAD,EAAuBI,oBAAvB,CAAf;AACD;;AAED,UAAUW,QAAV,GAAqB;AACnB,QAAMf,SAAS,CAAC,cAAD,EAAiBY,eAAjB,CAAf;AACD;;AAED,MAAMI,QAAQ,GAAG,CAAClB,IAAI,CAACgB,OAAD,CAAL,EAAgBhB,IAAI,CAACiB,QAAD,CAApB,CAAjB;AAEA,eAAe,UAAUE,WAAV,GAAwB;AACrC,QAAMlB,GAAG,CAAC,CAAC,GAAGiB,QAAJ,CAAD,CAAT;AACD","sourcesContent":["import {\r\n  call,\r\n  put,\r\n  takeLatest,\r\n  delay,\r\n  fork,\r\n  all,\r\n  takeEvery,\r\n} from \"redux-saga/effects\";\r\nimport { getListComment, postComment } from \"../../api/comment\";\r\nimport { getListCommentSuccess } from \"../actions/comment\";\r\n\r\nfunction* getListCommentIdSaga(action) {\r\n  try {\r\n    const data = yield call(getListComment, action.payload.id);\r\n    yield delay(200);\r\n    yield put(getListCommentSuccess(data));\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* postCommentSaga({ payload }) {\r\n  try {\r\n    const data = yield call(postComment, payload);\r\n\r\n    console.log(data);\r\n    if (data.status === 200) {\r\n      yield delay(500);\r\n      yield put(getListCommentSuccess(data));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* todoGet() {\r\n  yield takeEvery(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\r\n}\r\n\r\nfunction* todoPost() {\r\n  yield takeEvery(\"POST_COMMENT\", postCommentSaga);\r\n}\r\n\r\nconst rootSaga = [fork(todoGet), fork(todoPost)];\r\n\r\nexport default function* commentSaga() {\r\n  yield all([...rootSaga]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}