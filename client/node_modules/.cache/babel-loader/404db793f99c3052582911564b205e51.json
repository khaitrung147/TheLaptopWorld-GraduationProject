{"ast":null,"code":"import { call, put, delay, fork, all, takeEvery } from \"redux-saga/effects\";\nimport { getListComment, postComment } from \"../../api/comment\";\nimport { getListCommentSuccess, postCommentSuccess } from \"../actions/comment\";\n\nfunction* getListCommentIdSaga(action) {\n  try {\n    const data = yield call(getListComment, action.payload.id);\n    yield delay(200);\n    yield put(getListCommentSuccess(data));\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* postCommentSaga(action) {\n  try {\n    const data = yield call(postComment, action.payload);\n\n    if (data.status === 200) {\n      yield delay(500);\n      yield put(postCommentSuccess(data));\n      const res = yield call(getListComment, action.payload.id);\n      yield put(getListCommentSuccess(res));\n    }\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* todoGet() {\n  yield takeEvery(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\n}\n\nfunction* todoPost() {\n  yield takeEvery(\"POST_COMMENT\", postCommentSaga);\n}\n\nconst rootSaga = [fork(todoGet), fork(todoPost)];\nexport default function* commentSaga() {\n  yield all([...rootSaga]);\n}","map":{"version":3,"sources":["E:/fpoly/A-PROJECT2/New folder/TheLaptopWorld-GraduationProject/client/src/redux/sagas/comment.js"],"names":["call","put","delay","fork","all","takeEvery","getListComment","postComment","getListCommentSuccess","postCommentSuccess","getListCommentIdSaga","action","data","payload","id","error","console","log","postCommentSaga","status","res","todoGet","todoPost","rootSaga","commentSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,mBAA5C;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,oBAA1D;;AAEA,UAAUC,oBAAV,CAA+BC,MAA/B,EAAuC;AACrC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACM,cAAD,EAAiBK,MAAM,CAACE,OAAP,CAAeC,EAAhC,CAAvB;AACA,UAAMZ,KAAK,CAAC,GAAD,CAAX;AACA,UAAMD,GAAG,CAACO,qBAAqB,CAACI,IAAD,CAAtB,CAAT;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUG,eAAV,CAA0BP,MAA1B,EAAkC;AAChC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACO,WAAD,EAAcI,MAAM,CAACE,OAArB,CAAvB;;AACA,QAAID,IAAI,CAACO,MAAL,KAAgB,GAApB,EAAyB;AACvB,YAAMjB,KAAK,CAAC,GAAD,CAAX;AACA,YAAMD,GAAG,CAACQ,kBAAkB,CAACG,IAAD,CAAnB,CAAT;AAEA,YAAMQ,GAAG,GAAG,MAAMpB,IAAI,CAACM,cAAD,EAAiBK,MAAM,CAACE,OAAP,CAAeC,EAAhC,CAAtB;AACA,YAAMb,GAAG,CAACO,qBAAqB,CAACY,GAAD,CAAtB,CAAT;AACD;AACF,GATD,CASE,OAAOL,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUM,OAAV,GAAoB;AAClB,QAAMhB,SAAS,CAAC,oBAAD,EAAuBK,oBAAvB,CAAf;AACD;;AAED,UAAUY,QAAV,GAAqB;AACnB,QAAMjB,SAAS,CAAC,cAAD,EAAiBa,eAAjB,CAAf;AACD;;AAED,MAAMK,QAAQ,GAAG,CAACpB,IAAI,CAACkB,OAAD,CAAL,EAAgBlB,IAAI,CAACmB,QAAD,CAApB,CAAjB;AAEA,eAAe,UAAUE,WAAV,GAAwB;AACrC,QAAMpB,GAAG,CAAC,CAAC,GAAGmB,QAAJ,CAAD,CAAT;AACD","sourcesContent":["import { call, put, delay, fork, all, takeEvery } from \"redux-saga/effects\";\r\nimport { getListComment, postComment } from \"../../api/comment\";\r\nimport { getListCommentSuccess, postCommentSuccess } from \"../actions/comment\";\r\n\r\nfunction* getListCommentIdSaga(action) {\r\n  try {\r\n    const data = yield call(getListComment, action.payload.id);\r\n    yield delay(200);\r\n    yield put(getListCommentSuccess(data));\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* postCommentSaga(action) {\r\n  try {\r\n    const data = yield call(postComment, action.payload);\r\n    if (data.status === 200) {\r\n      yield delay(500);\r\n      yield put(postCommentSuccess(data));\r\n\r\n      const res = yield call(getListComment, action.payload.id);\r\n      yield put(getListCommentSuccess(res));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* todoGet() {\r\n  yield takeEvery(\"GET_LIST_COMMENTID\", getListCommentIdSaga);\r\n}\r\n\r\nfunction* todoPost() {\r\n  yield takeEvery(\"POST_COMMENT\", postCommentSaga);\r\n}\r\n\r\nconst rootSaga = [fork(todoGet), fork(todoPost)];\r\n\r\nexport default function* commentSaga() {\r\n  yield all([...rootSaga]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}