{"ast":null,"code":"import { call, put, delay, fork, all, takeEvery } from \"redux-saga/effects\";\nimport { getListRate, postRate } from \"../../api/rate\";\nimport { getListRateSuccess, postRateSuccess } from \"../actions/rate\";\n\nfunction* getListRateIdSaga(action) {\n  try {\n    const data = yield call(getListRate, action.payload.id);\n    yield delay(-100);\n    yield put(getListRateSuccess(data));\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* postRateSaga(action) {\n  try {\n    const data = yield call(postRate, action.payload);\n\n    if (data.status === 200) {\n      yield put(postRateSuccess(data));\n    }\n  } catch (error) {\n    console.log(\"error :>> \", error);\n  }\n}\n\nfunction* todoGet() {\n  yield takeEvery(\"GET_LIST_RATEID\", getListRateIdSaga);\n}\n\nfunction* todoPost() {\n  yield takeEvery(\"POST_RATE\", postRateSaga);\n}\n\nconst rootSaga = [fork(todoGet), fork(todoPost)];\nexport default function* commentSaga() {\n  yield all([...rootSaga]);\n}","map":{"version":3,"sources":["E:/fpoly/A-PROJECT2/New folder/TheLaptopWorld-GraduationProject/client/src/redux/reducers/rate.js"],"names":["call","put","delay","fork","all","takeEvery","getListRate","postRate","getListRateSuccess","postRateSuccess","getListRateIdSaga","action","data","payload","id","error","console","log","postRateSaga","status","todoGet","todoPost","rootSaga","commentSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,SAAtC,QAAuD,oBAAvD;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,iBAApD;;AAEA,UAAUC,iBAAV,CAA4BC,MAA5B,EAAoC;AAClC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACM,WAAD,EAAcK,MAAM,CAACE,OAAP,CAAeC,EAA7B,CAAvB;AACA,UAAMZ,KAAK,CAAC,CAAC,GAAF,CAAX;AACA,UAAMD,GAAG,CAACO,kBAAkB,CAACI,IAAD,CAAnB,CAAT;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUG,YAAV,CAAuBP,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACO,QAAD,EAAWI,MAAM,CAACE,OAAlB,CAAvB;;AACA,QAAID,IAAI,CAACO,MAAL,KAAgB,GAApB,EAAyB;AACvB,YAAMlB,GAAG,CAACQ,eAAe,CAACG,IAAD,CAAhB,CAAT;AACD;AACF,GALD,CAKE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACD;AACF;;AAED,UAAUK,OAAV,GAAoB;AAClB,QAAMf,SAAS,CAAC,iBAAD,EAAoBK,iBAApB,CAAf;AACD;;AAED,UAAUW,QAAV,GAAqB;AACnB,QAAMhB,SAAS,CAAC,WAAD,EAAca,YAAd,CAAf;AACD;;AAED,MAAMI,QAAQ,GAAG,CAACnB,IAAI,CAACiB,OAAD,CAAL,EAAgBjB,IAAI,CAACkB,QAAD,CAApB,CAAjB;AAEA,eAAe,UAAUE,WAAV,GAAwB;AACrC,QAAMnB,GAAG,CAAC,CAAC,GAAGkB,QAAJ,CAAD,CAAT;AACD","sourcesContent":["import { call, put, delay, fork, all, takeEvery } from \"redux-saga/effects\";\r\nimport { getListRate, postRate } from \"../../api/rate\";\r\nimport { getListRateSuccess, postRateSuccess } from \"../actions/rate\";\r\n\r\nfunction* getListRateIdSaga(action) {\r\n  try {\r\n    const data = yield call(getListRate, action.payload.id);\r\n    yield delay(-100);\r\n    yield put(getListRateSuccess(data));\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* postRateSaga(action) {\r\n  try {\r\n    const data = yield call(postRate, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(postRateSuccess(data));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error :>> \", error);\r\n  }\r\n}\r\n\r\nfunction* todoGet() {\r\n  yield takeEvery(\"GET_LIST_RATEID\", getListRateIdSaga);\r\n}\r\n\r\nfunction* todoPost() {\r\n  yield takeEvery(\"POST_RATE\", postRateSaga);\r\n}\r\n\r\nconst rootSaga = [fork(todoGet), fork(todoPost)];\r\n\r\nexport default function* commentSaga() {\r\n  yield all([...rootSaga]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}